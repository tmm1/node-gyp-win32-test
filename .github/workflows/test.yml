on:
  workflow_dispatch:
  push:

jobs:
  windows:
    name: Windows
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Find where node-gyp is preinstalled
        shell: bash
        run: |
          find $(dirname $(which node)) -ls | grep node-gyp/package.json
          find $(dirname $(which node)) | grep node-gyp/package.json | xargs grep version

      - name: Install node-gyp globally
        run: |
          npm install -g node-gyp@^11.2.0
          node-gyp --version

      - name: Upgrade node-gyp inside npm package
        if: ${{ always() }}
        run: |
          $nodePath = (Get-Command node).Path
          $nodeDir = Split-Path -Parent $nodePath
          Push-Location $nodeDir\\node_modules\\npm
          npm install node-gyp@^11.2.0

      # This might work but:
      #   - adds two minutes to the build
      #   - creates a new node_modules/@npmcli/run-script/node_modules file structure
      #   - doesn't upgrade the node_modules/node-gyp

      - name: Upgrade node-gyp inside @npmcli/run-script package
        if: ${{ always() }}
        run: |
          $nodePath = (Get-Command node).Path
          $nodeDir = Split-Path -Parent $nodePath
          Push-Location $nodeDir\\node_modules\\npm\\node_modules\\@npmcli\\run-script
          npm install --prefix ../../../ node-gyp@^11.2.0

      - name: Install project and see what node-gyp version is used
        if: ${{ always() }}
        run: |
          npm ci 2>&1 | Tee-Object -Variable npmOutput
          Write-Host $npmOutput
          if ($npmOutput -notmatch "11.2.0") {
            Write-Error "Expected node-gyp version 11.2 in npm ci output, but not found"
            exit 1
          }
          